// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto_Controlador_Financeiro_Pessoal.Context;

#nullable disable

namespace Projeto_Controlador_Financeiro_Pessoal.Migrations
{
    [DbContext(typeof(ControladorFinanceiroContext))]
    [Migration("20240909152047_AddDataPagamento")]
    partial class AddDataPagamento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeBanco")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.DataPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("LancamentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LancamentoId");

                    b.ToTable("DataPagamentos");
                });

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.Lancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NumeroParcelas")
                        .HasColumnType("int");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.PessoaBanco", b =>
                {
                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.HasKey("PessoaId", "BancoId");

                    b.HasIndex("BancoId");

                    b.ToTable("PessoaBancos");
                });

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.DataPagamento", b =>
                {
                    b.HasOne("Projeto_Controlador_Financeiro_Pessoal.Models.Lancamento", "Lancamento")
                        .WithMany("DataPagamentos")
                        .HasForeignKey("LancamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lancamento");
                });

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.Lancamento", b =>
                {
                    b.HasOne("Projeto_Controlador_Financeiro_Pessoal.Models.Banco", "Banco")
                        .WithMany("Lancamentos")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_Controlador_Financeiro_Pessoal.Models.Pessoa", "Pessoa")
                        .WithMany("Lancamentos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.PessoaBanco", b =>
                {
                    b.HasOne("Projeto_Controlador_Financeiro_Pessoal.Models.Banco", "Banco")
                        .WithMany("PessoaBancos")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_Controlador_Financeiro_Pessoal.Models.Pessoa", "Pessoa")
                        .WithMany("PessoaBancos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.Banco", b =>
                {
                    b.Navigation("Lancamentos");

                    b.Navigation("PessoaBancos");
                });

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.Lancamento", b =>
                {
                    b.Navigation("DataPagamentos");
                });

            modelBuilder.Entity("Projeto_Controlador_Financeiro_Pessoal.Models.Pessoa", b =>
                {
                    b.Navigation("Lancamentos");

                    b.Navigation("PessoaBancos");
                });
#pragma warning restore 612, 618
        }
    }
}
